<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  2.添加crud关系 !!现在是额外在关系表里操作,具体crud在service中实现 -->

<mapper namespace="www.lesson.lesson.dao.LessonDao">

    <resultMap id="BaseResultMap" type="Lesson">
        <id column="id" jdbcType="INTEGER" javaType="java.lang.String" property="id"
            />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="session" jdbcType="VARCHAR" property="session" />
        <result column="teacher_id" jdbcType="VARCHAR" property="teacherId" />
        <!-- 查询 暂时不需要使用 , 所以还没改查询语句
        <collection property="classList" column="" >

        </collection>-->
    </resultMap>

    <sql id="Base_Column_List">
        id, name, session, teacher_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lesson
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from lesson
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="Lesson">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
            <!--获取主键自增值 -->
            select last_insert_id()
        </selectKey>
        insert into lesson ( name, session,
        teacher_id)
        values ( #{name,jdbcType=VARCHAR}, #{session,jdbcType=VARCHAR},
        #{teacherId,jdbcType=VARCHAR})
    </insert>


    <insert id="insertSelective" parameterType="Lesson">
        insert into lesson
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="session != null">
                session,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="session != null">
                #{session,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="Lesson">
        update lesson
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="session != null">
                session = #{session,jdbcType=VARCHAR},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="Lesson">
        update lesson
        set name = #{name,jdbcType=VARCHAR},
        session = #{session,jdbcType=VARCHAR},
        teacher_id = #{teacherId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 添加课程与班级的关系 -->
    <insert id="insertRelativity" >
        insert into lesson__class (lesson_id,class_id)
        values (#{lessonId,jdbcType=INTEGER}, #{classId,jdbcType=VARCHAR} )
    </insert>

    <!-- 删除课程与班级之间的关系 -->
    <delete id="deleteRelativity">
        delete from lesson__class
        where lesson_id = #{lessonId,jdbcType=INTEGER} AND class_id = #{classId,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteAllRelativity">
        delete from lesson__class
        where lesson_id = #{lessonId,jdbcType=INTEGER}
    </delete>

    <select id="listRelativity" parameterType="java.lang.String" resultType="java.lang.String">
        select
        class_id
        from lesson__class
        where lesson_id = #{lessonId,jdbcType=INTEGER}
    </select>


    <select id="totalLessonByClass" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(0) FROM lesson__class lc
        WHERE lc.class_id = #{classId,jdbcType=VARCHAR}
    </select>

    <select id="listLessonsByClass" resultMap="BaseResultMap" >
        SELECT l.* FROM lesson__class lc,lesson l
        WHERE lc.class_id = #{classId,jdbcType=VARCHAR} AND l.id = lc.lesson_id
        limit #{start},#{end}
    </select>

</mapper>
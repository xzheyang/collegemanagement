<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="www.lesson.register.dao.StudentDao">

    <!--修改mapper需要修改ResultMap的property(负责查询),和修改插入的property -->

    <resultMap id="BaseResultMap" type="Student">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="username" jdbcType="VARCHAR" property="userName" />
        <result column="sex" jdbcType="BIT" property="woman" />
        <result column="birthday" jdbcType="VARCHAR" property="birthday" />
        <result column="identification" jdbcType="VARCHAR" property="identification" />
        <result column="class_id" jdbcType="VARCHAR" property="classId" />
    </resultMap>

    <sql id="Base_Column_List">
        id, username, sex, birthday, identification, class_id
    </sql>


    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from student
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getNameById" parameterType="java.lang.String" resultType="java.lang.String">
        select
        username
        from student
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="getClassIdById" parameterType="java.lang.String" resultType="java.lang.String">
        select
        class_id
        from student
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from student
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="Student">
        insert into student (id, username, sex,
        birthday, identification, class_id
        )
        values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{woman,jdbcType=BIT},
        #{birthday,jdbcType=VARCHAR}, #{identification,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                username,
            </if>
            <if test="woman != null">
                sex,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="identification != null">
                identification,
            </if>
            <if test="classId != null">
                class_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="woman != null">
                #{woman,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="identification != null">
                #{identification,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="Student">
        update student
        <set>
            <if test="userName != null">
                username = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="woman != null">
                sex = #{woman,jdbcType=BIT},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=VARCHAR},
            </if>
            <if test="identification != null">
                identification = #{identification,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="Student">
        update student
        set username = #{userName,jdbcType=VARCHAR},
        sex = #{woman,jdbcType=BIT},
        birthday = #{birthday,jdbcType=VARCHAR},
        identification = #{identification,jdbcType=VARCHAR},
        class_id = #{classId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="listPreStudentIds" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT id FROM student WHERE id LIKE CONCAT('', #{classId,jdbcType=VARCHAR}, '%')
    </select>

    <select id="totalStudentByClass" resultType="java.lang.Integer" parameterType="java.lang.String">
        SELECT COUNT(0) FROM student WHERE class_id = #{classId,jdbcType=VARCHAR}
    </select>

    <select id="listStudentsByClass" resultMap="BaseResultMap" >
        SELECT <include refid="Base_Column_List" /> FROM student WHERE class_id = #{classId,jdbcType=VARCHAR} limit #{start},#{end}
    </select>


</mapper>